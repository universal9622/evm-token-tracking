datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    // Corresponds to the cargo alias created earlier
    provider = "cargo prisma"
    // The location to generate the client. Is relative to the position of the schema
    output   = "../src/prisma.rs"
}

enum Chain {
    ETHEREUM_GOERLI
    POLYGON_MUMBAI
    OPBNB_TESTNET
    BNBCHAIN_TESTNET
    ZKSYNC_ERA_TESTNET
}

enum Standard {
    ERC721
    ERC1155
}

enum IndexedType {
    LOG
    TOKEN
}

model Logs {
    id           String   @id @default(dbgenerated("(gen_random_uuid())")) @db.VarChar(36)
    tx_hash      String   @db.VarChar(66)
    block_number BigInt   @db.BigInt
    log_index    BigInt   @db.BigInt
    topics       String[] @default([])
    address      String   @db.VarChar(66)
    data         Bytes

    @@unique([block_number, log_index])
    @@index([block_number])
    @@index([tx_hash])
}

model States {
    chain         Chain
    indexed_type  IndexedType
    indexed_block BigInt

    @@unique([chain, indexed_type])
}

model Tokens {
    id            String   @id @default(dbgenerated("(gen_random_uuid())")) @db.VarChar(36)
    chain         Chain
    tokenId       String   @db.VarChar(66)
    contract      String   @db.VarChar(66)
    owner         String   @db.VarChar(66)
    uri           String?  @db.VarChar(200)
    standard      Standard
    indexed_block BigInt   @db.BigInt

    @@unique([chain, tokenId, contract])
    @@index([standard])
    @@index([chain])
    @@index([owner])
    @@index([contract])
}
